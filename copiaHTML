INTRODUÇÃO À SEGURANÇA DA INFORMAÇÃO

PRINCÍPIOS DA SEGURANÇA E O CICLO DE VIDA DA INFORMAÇÃO. AMEAÇAS E
VULNERABILIDADES À SEGURANÇA DE INFORMAÇÃO. NORMAS DE SEGURANÇA DA
INFORMAÇÃO. BOAS PRÁTICAS EM SEGURANÇA DA INFORMAÇÃO. GESTÃO DE RISCO.
GESTÃO DE CONTINUIDADE DO NEGÓCIO

Temas de aprendizagem
1.   PRINCÍPIOS DA SEGURANÇA E O CICLO DE VIDA DA INFORMAÇÃO
1.1 SEGURANÇA DA INFORMAÇÃO
1.2 SEGURANÇA FÍSICA, LÓGICA E CONTROLE DE ACESSO
2.   AMEAÇAS E VULNERABILIDADES À SEGURANÇA DE INFORMAÇÃO
2.1 TIPOS DE AMEAÇAS E VULNERABILIDADES
2.2 ATAQUES CIBERNÉTICOS
3.   NORMAS DE SEGURANÇA DA INFORMAÇÃO
3.1 FINALIDADES E BENEFÍCIOS DAS NORMAS
3.2 APLICAÇÃO DAS NORMAS
4.   BOAS PRÁTICAS EM SEGURANÇA DA INFORMAÇÃO
4.1 SENHAS, TREINAMENTO E PROTEÇÃO
4.2 CONTROLE DE ACESSO, VÍRUS E BACKUPS
4.3 CRIPTOGRAFIA DE DADOS E CERTIFICADO DIGITAL
5.   GESTÃO DE RISCO
5.1 PRESERVAÇÃO DA CONFIDENCIALIDADE, INTEGRIDADE E DISPONILIDADE (CID)
5.2 ETAPAS DA GESTÃO DE RISCOS
6.   GESTÃO DE CONTINUIDADE DO NEGÓCIO
6.1 PLANO DE CONTINUIDADE DE NEGÓCIOS (PCN)
6.2 ETAPAS DO PCN
6.3 PGCN E BIBLIOTECA ITIL



 PARADIGMAS DE LINGUAGENS DE PROGRAMAÇÃO EM PYTHON

PARADIGMAS E LINGUAGEM PYTHON; PYTHON BÁSICO; PYTHON ESTRUTURADO;
PYTHON ORIENTADO A OBJETOS.


Temas de aprendizagem
1.   PARADIGMAS E LINGUAGEM PYTHON
2.   PYTHON BÁSICO
3.   PYTHON ESTRUTURADO
4.   PYTHON ORIENTADO A OBJETOS



ARQUITETURA DE COMPUTADORES

Base Computacional. Componentes de Hardware. Representação de dados. Lógica digital.
Processamento em paralelo. Arquitetura RISC x CISC

Temas de aprendizagem
1.   BASE COMPUTACIONAL
1.1 A EVOLUÇÃO HISTÓRICA DOS COMPUTADORES
1.2 OS COMPONENTES DE UM SISTEMA COMPUTACIONAL
1.3 O PAPEL DO SISTEMA OPERACIONAL NOS COMPUTADORES
1.4 A IMPORTÂNCIA DA COMUNICAÇÃO EM REDE COM OS SISTEMAS COMPUTACIONAIS
2.   COMPONENTES DE HARDWARE
2.1 A ESTRUTURA BÁSICA DE UM COMPUTADOR
2.2 OS PRINCÍPIOS BÁSICOS DOS SUBSISTEMAS DE PROCESSAMENTO
2.3 O ESSENCIAL SOBRE O SISTEMA OPERACIONAL
3.   REPRESENTAÇÃO DE DADOS
3.1 AS UNIDADES DE INFORMAÇÃO UTILIZADAS PELOS SISTEMAS DE COMPUTAÇÃO
3.2 OS SISTEMAS DE NUMERAÇÃO A PARTIR DA PRÁTICA DE OPERAÇÕES ARITMÉTICAS
3.3 A CONVERSÃO ENTRE OS SISTEMAS DE NUMERAÇÃO
3.4 AS TABELAS DE REPRESENTAÇÃO DE DADOS
4.   LÓGICA DIGITAL
4.1 AS OPERAÇÕES BÁSICAS DA ÁLGEBRA BOOLEANA
4.2 PORTAS LÓGICAS, OPERAÇÕES LÓGICAS E AS SUAS TABELAS VERDADE
4.3 AS EXPRESSÕES LÓGICAS E DIAGRAMAS LÓGICOS
5.   PROCESSAMENTO EM PARALELO
5.1 AS VANTAGENS DA COMPUTAÇÃO DE ALTO DESEMPENHO
5.2 OS TIPOS DE ORGANIZAÇÕES DE PROCESSADORES PARALELOS
5.3 AS QUESTÕES DE DESEMPENHO DO HARDWARE QUE DIRECIONAM O MOVIMENTO
PARA OS COMPUTADORES MULTICORE
6.   ARQUITETURA RISC X CISC
6.1 IDENTIFICAR CARACTERÍSTICAS E PROPRIEDADES DA ARQUITETURA CISC
6.2 IDENTIFICAR CARACTERÍSTICAS E PROPRIEDADES DA ARQUITETURA RISC



PENSAMENTO COMPUTACIONAL

Introdução aos princípios fundamentais da computação. Fundamentos de softwares de computadores.
Fundamentos de hardware. representação de imagens em computadores. Noções de programação:
exemplos com manipulação de imagens digitais. Pensamento computacional e aplicações nas áreas de
conhecimento

Temas de aprendizagem
1.   INTRODUÇÃO AOS PRINCÍPIOS FUNDAMENTAIS DA COMPUTAÇÃO
1.1 A EQUAÇÃO QUE REPRESENTA A ESSÊNCIA DOS COMPUTADORES
1.2 O PROCESSO DE EXPLORAÇÃO DO POTENCIAL DOS COMPUTADORES ATRAVÉS DE
CÓDIGOS E ALGORITMOS
1.3 PRIMEIRO CONTATO COM CÓDIGOS DE COMPUTADORES
2.   FUNDAMENTOS DE SOFTWARES DE COMPUTADORES
2.1 SOFTWARE: CONCEITOS BÁSICOS
2.2 SISTEMAS OPERACIONAIS E FIRMWARE
2.3 LINGUAGENS DE PROGRAMAÇÃO
3.   FUNDAMENTOS DE HARDWARE
3.1 HARDWARE DE COMPUTADOR
3.2 UNIDADES DE ARMAZENAMENTO
4.   REPRESENTAÇÃO DE IMAGENS EM COMPUTADORES
4.1 FUNDAMENTOS SOBRE PIXELS
4.2 O ESQUEMA RGB DE REPRESENTAÇÃO DE CORES EM COMPUTADORES
5.   NOÇÕES DE PROGRAMAÇÃO: EXEMPLOS COM MANIPULAÇÃO DE IMAGENS
DIGITAIS
5.1 INSTRUÇÃO PARA MANIPULAÇÃO SIMPLES DE DADOS
5.2 ESTRUTURA DE REPETIÇÃO FOR
5.3 EXPRESSÕES
54ESTRUTURACONDICIONAL
DIGITAIS
5.1 INSTRUÇÃO PARA MANIPULAÇÃO SIMPLES DE DADOS
5.2 ESTRUTURA DE REPETIÇÃO FOR
5.3 EXPRESSÕES
5.4 ESTRUTURA CONDICIONAL
6.   PENSAMENTO COMPUTACIONAL E APLICAÇÕES NAS ÁREAS DE CONHECIMENTO
6.1 PENSAMENTO COMPUTACIONAL E O PROFISSIONAL DO SÉCULO XXI
6.2 APLICAÇÕES NA ECONOMIA CRIATIVA, NEGÓCIOS E CIÊNCIAS JURÍDICAS
6.3 APLICAÇÕES NA EDUCAÇÃO E ENGENHARIA



DESENV. WEB EM HTML5, CSS, JAVASCRIPT E PHP

O AMBIENTE WEB CLIENTE X SERVIDOR E AS TECNOLOGIAS; LINGUAGEM DE
MARCAÇÃO DE HYPERTEXTO ­ HTML; LINGUAGEM DE MARCAÇÃO E ESTILOS ­ CSS;
LINGUAGEM JAVASCRIPT; PROGRAMAÇÃO DE PÁGINAS DINÂMICAS COM PHP;
INTEGRAÇÃO DO PHP COM BANCO DE DADOS.


Temas de aprendizagem
1.   O AMBIENTE WEB CLIENTE X SERVIDOR E AS TECNOLOGIAS
1.1 AMBIENTE WEB
1.2 INTERFACE
1.3 TECNOLOGIAS DO LADO CLIENTE
1.4 TECNOLOGIAS DO LADO SERVIDOR
2.   LINGUAGEM DE MARCAÇÃO DE HYPERTEXTO ­ HTML
2.1 ESTRUTURA DE PÁGINA WEB
2.2 TAGS NA HTML
2.3 TAGS COMPLEMENTARES
2.4 FORMULÁRIO DE PÁGINA WEB
3.   LINGUAGEM DE MARCAÇÃO E ESTILOS ­ CSS
3.1 FUNDAMENTOS DA CSS
3.2 RECURSOS DA CSS3
3.3 BOX MODEL, PSEUDOCLASSES, PSEUDO­ELEMENTOS E POSICIONAMENTO
3.4 FRAMEWORKS CSS
4.   LINGUAGEM JAVASCRIPT
4.1 UTILIZAÇÃO DO JAVASCRIPT
4.2 ESTRUTURAS DE DECISÃO E REPETIÇÃO
4.3 VETOR EM JAVASCRIPT
4.4 AJAX E JSON
5.   PROGRAMAÇÃO DE PÁGINAS DINÂMICAS COM PHP
5.1 LINGUAGEM PHP
5.2 ESTRUTURAS DE DECISÃO E REPETIÇÃO EM PHP
5.3 VETORES E FUNÇÕES EM PHP
6.   INTEGRAÇÃO DO PHP COM BANCO DE DADOS
61CLASSEPDO
5.2 ESTRUTURAS DE DECISÃO E REPETIÇÃO EM PHP
5.3 VETORES E FUNÇÕES EM PHP
6.   INTEGRAÇÃO DO PHP COM BANCO DE DADOS
6.1 CLASSE PDO
6.2 MÉTODOS DA CLASSE PDO
6.3 APLICAÇÃO COM HTML E PHP

----



MODELAGEM DE SISTEMAS EM UML

CONCEITOS BÁSICOS DE MODELAGEM DE SISTEMAS
UML PARA MODELAGEM DO DOMÍNIO
UTILIZANDO UML PARA PROJETAR O SOFTWARE
ESTUDO DE CASO DE MODELAGEM DE SISTEMAS EM UML
INTRODUÇÃO A PADRÕES DE PROJETO ­ DESIGN PATTERNS


Temas de aprendizagem
1.   CONCEITOS BÁSICOS DE MODELAGEM DE SISTEMAS
1.1 A IMPORTÂNCIA DOS MODELOS NA EXPOSIÇÃO DE REQUISITOS E SOLUÇÕES
SISTÊMICAS
1.2 OS CONCEITOS E PILARES DE ANÁLISE E PROJETO ORIENTADOS A OBJETOS
1.3 AS VISÕES, A SÍNTESE GERAL E OS DIAGRAMAS DA UML
2.   UML PARA MODELAGEM DO DOMÍNIO
2.1 REQUISITOS FUNCIONAIS DE UM SISTEMA COM USO DE DIAGRAMA DE CASOS DE
USO
2.2 CASOS DE USO POR MEIO DE ESPECIFICAÇÕES TEXTUAIS
2.3 CLASSES E SEUS RELACIONAMENTOS EM UM DOMÍNIO DE APLICAÇÃO COM USO DE
DIAGRAMA DE CLASSES
2.4 DIAGRAMAS DE OBJETOS E DE PACOTES PARA APOIAR A ESPECIFICAÇÃO DE UM
SISTEMA
3.UTILIZANDOUMLPARAPROJETAROSOFTWARE
DIAGRAMA DE CLASSES
2.4 DIAGRAMAS DE OBJETOS E DE PACOTES PARA APOIAR A ESPECIFICAÇÃO DE UM
SISTEMA
3.   UTILIZANDO UML PARA PROJETAR O SOFTWARE
3.1 OS DIAGRAMAS DE INTERAÇÃO NO PROJETO DE SISTEMA
3.2 O DIAGRAMA DE CLASSES DA ANÁLISE NO PROJETO DE SISTEMA
3.3 OS DIAGRAMAS DE ESTADO E DE ATIVIDADES NO PROJETO DE SISTEMA
3.4 OS DIAGRAMAS DE COMPONENTES E DE IMPLANTAÇÃO
4.   ESTUDO DE CASO DE MODELAGEM DE SISTEMAS EM UML
4.1 DOCUMENTO DE REQUISITOS PARA UM ESTUDO DE CASO DE MODELAGEM DE
SISTEMAS
4.2 MODELO DE CASOS DE USO PARA UM ESTUDO DE CASO DE MODELAGEM DE
SISTEMAS EM UML
4.3 MODELOS DE ANÁLISE PARA UM ESTUDO DE CASO DE MODELAGEM DE SISTEMAS
EM UML
4.4 MODELO DE PROJETO PARA UM ESTUDO DE CASO DE MODELAGEM DE SISTEMAS
EM UML
5.   INTRODUÇÃO A PADRÕES DE PROJETO ­ DESIGN PATTERNS
5.1 CONCEITOS GERAIS DE PADRÕES DE PROJETO, SEUS ELEMENTOS E SUAS
CARACTERÍSTICAS
5.2 O PROPÓSITO DOS PADRÕES GRASP
5.3 CARACTERÍSTICAS DOS PRINCÍPIOS SOLID
5.4 O PROPÓSITO DOS PRINCIPAIS PADRÕES GOF



COMPUTAÇÃO EM NUVEM

FUNDAMENTOS DE COMPUTAÇÃO EM NUVEM; ARQUITETURA DE COMPUTAÇÃO EM
NUVEM; SEGURANÇA EM COMPUTAÇÃO EM NUVEM; AMBIENTE DE COMPUTAÇÃO EM
NUVEM ­ AZURE; AMBIENTE DE COMPUTAÇÃO EM NUVEM ­ AWS; AMBIENTE DE
COMPUTAÇÃO EM NUVEM ­ GOOGLE CLOUD.


Temas de aprendizagem
1.   FUNDAMENTOS DE COMPUTAÇÃO EM NUVEM
1.1 COMPUTAÇÃO EM NUVEM
1.2 MODELOS DE COMPUTAÇÃO EM NUVEM
1.3 TECNOLOGIAS HABILITADORAS DA COMPUTAÇÃO EM NUVEM
2.   ARQUITETURA DE COMPUTAÇÃO EM NUVEM
2.1 ARQUITETURA DE INFRAESTRUTURA E COMPUTAÇÃO EM NUVEM
2.2 ADMINISTRAÇÃO DE CAMADAS DE SERVIDORES
2.3 ARQUITETURA DE SOLUÇÃO EM NUVEM
3.   SEGURANÇA EM COMPUTAÇÃO EM NUVEM
3.1 INTRODUÇÃO A SEGURANÇA EM COMPUTAÇÃO EM NUVEM
3.2 ASPECTOS DE SEGURANÇA
3.3 SERVIÇOS EM NUVEM
3.4 ORIENTAÇÕES DA CLOUD SECUTIRY ALLIANCE (CSA)
4.   AMBIENTE DE COMPUTAÇÃO EM NUVEM ­ AZURE
4.1 OS CONCEITOS DO AZURE: MODELOS E NUVEM
4.2 A ARQUITETURA E OS SERVIÇOS DO AZURE
4.3 GERENCIAMENTO, GOVERNANÇA E MONITORAMENTO DO AZURE
44APLICAÇÕESPRÁTICASDOAZURE
4.   AMBIENTE DE COMPUTAÇÃO EM NUVEM ­ AZURE
4.1 OS CONCEITOS DO AZURE: MODELOS E NUVEM
4.2 A ARQUITETURA E OS SERVIÇOS DO AZURE
4.3 GERENCIAMENTO, GOVERNANÇA E MONITORAMENTO DO AZURE
4.4 APLICAÇÕES PRÁTICAS DO AZURE
5.   AMBIENTE DE COMPUTAÇÃO EM NUVEM ­ AWS
5.1 COMPUTAÇÃO NA AWS
5.2 ARMAZENAMENTO
5.3 REDE E CONECTIVIDADE
5.4 APLICAÇÕES PRÁTICAS COM AWS
6.   AMBIENTE DE COMPUTAÇÃO EM NUVEM ­ GOOGLE CLOUD
6.1 CONCEITOS DO GOOGLE CLOUD
6.2 INFRAESTRUTURA E APLICATIVOS COM GOOGLE CLOUD
6.3 SEGURANÇA E OPERAÇÕES NO GOOGLE CLOUD
6.4 APLICAÇÕES PRÁTICAS COM O GOOGLE CLOUD



ESTRUTURA DE DADOS

Estruturas de dados heterogêneas. Modularização. Listas, pilhas e filas. Ordenação. Árvores.


Temas de aprendizagem
1.   ESTRUTURAS DE DADOS HETEROGÊNEAS
2.   MODULARIZAÇÃO
3.   LISTAS, PILHAS E FILAS
4.   ORDENAÇÃO
5.   ÁRVORES



COMUNICAÇÃO ENTRE APLICAÇÕES

INTRODUÇÃO A REDES DE COMPUTADORES E HISTÓRICO DA INTERNET; MODELO DE
REFERÊNCIA OSI E ARQUITETURA TCP/IP
CAMADAS DE APLICAÇÃO E TRANSPORTE; CAMADA DE REDE; CAMADAS DE ENLACE
E FÍSICA; FUNDAMENTOS DE ADMINISTRAÇÃO E SEGURANÇA EM REDE DE
COMPUTADORES


Temas de aprendizagem
1.   REDES DE COMPUTADORES E A INTERNET
1.1 CONCEITOS BÁSICOS
1.2 PARÂMETROS DE AVALIAÇÃO
1.3 CAMADAS DE PROTOCOLO E MODELOS DE SERVIÇO
1.4 HISTÓRICO DA INTERNET
2.   MODELO DE REFERÊNCIA OSI E ARQUITETURA TCP/IP
2.1 REDES EM CAMADAS
2.2 MODELO OSI
2.3 ARQUITETURA TCP/IP
3.   CAMADAS DE APLICAÇÃO E TRANSPORTE
3.1 ARQUITETURAS E CAMADA DE APLICAÇÃO
3.2 SERVIÇOS DA CAMADA DE APLICAÇÃO
3.3 ELEMENTOS DA CAMADA DE TRANSPORTE
3.4 SERVIÇOS DA CAMADA DE TRANSPORTE
4.   DESENVOLVIMENTO DE APLICAÇÕES COM SOCKETS
4.1 CONCEITOS BÁSICOS
4.2 APLICAÇÃO PRÁTICA DE SOCKETS COM UDP
4.3 APLICAÇÃO PRÁTICA DE SOCKETS COM TCP
4.4 DESENVOLVENDO APLICAÇÕES SEGURAS COM SOCKET
5.   WEB SERVICES EM PYTHON
5.1 ARQUITETURA DE WEB SERVICES
5.2 WEB SERVICE SOAP EM PYTHON
5.3 IMPLEMENTAÇÃO DE UMA API REST COM SPRING DATA E MONGODB
5.4 CONSUMO WEB SERVICES POR MEIO DA ARQUITETURA REST COM PYTHON



ENGENHARIA DE USABILIDADE

Ergonomia; Princípios Ergonômicos para IHC; Projeto de IHC; Técnicas de Avaliação de Usabilidade;
Conceitos e Importância.

Temas de aprendizagem
1.   ERGONOMIA EM INTERAÇÃO HUMANO COMPUTADOR

8 Temas de aprendizagem
1.   ERGONOMIA EM INTERAÇÃO HUMANO COMPUTADOR
1.1 DESCREVER OS CONCEITOS DE ERGONOMIA E USABILIDADE EM GERAL
1.2 DESCREVER OS PRINCÍPIOS E CRITÉRIOS ERGONÔMICOS EM IHC
1.3 IDENTIFICAÇÃO DO QUE É NECESSÁRIO PARA QUE UM SOFTWARE TENHA
CARACTERÍSTICAS MÍNIMAS DE ERGONOMIA EM IHC
2.   DESENVOLVIMENTO DE INTERFACE HUMANO COMPUTADOR
2.1 ELEMENTOS A SEREM DEFINIDOS EM UM PROJETO DE DESIGN DE INTERFACE
HUMANO­COMPUTADOR
2.2 TÉCNICAS DE CONCEPÇÃO E DE MODELAGEM DE INTERFACE HUMANO
COMPUTADOR
2.3 PROCESSO DE DESIGN DE INTERFACE HUMANO­COMPUTADOR
2.4 PRINCÍPIOS E DIRETRIZES PARA O DESIGN DE INTERFACES HUMANO­COMPUTADOR
3.   AVALIAÇÃO DE INTERFACE HUMANO­COMPUTADOR
3.1 A IMPORTÂNCIA DA AVALIAÇÃO DE USABILIDADE DE UMA INTERFACE HUMANOCOMPUTADOR
3.2 APLICAR A TÉCNICA DE AVALIAÇÃO HEURÍSTICA DE INTERFACE HUMANOCOMPUTADOR
3.3 APLICAR A TÉCNICA DE AVALIAÇÃO POR INSPEÇÃO POR MEIO DE LISTA DE
VERIFICAÇÃO DE INTERFACE HUMANO­COMPUTADOR
3.4 APLICAR A TÉCNICA DE AVALIAÇÃO POR ENSAIO DE INTERAÇÃO DE INTERFACE
HUMANO­COMPUTADOR
4.   ACESSIBILIDADE À WEB
4.1 CONCEITO GERAL DE ACESSIBILIDADE, SUAS SEIS DIMENSÕES E CARACTERÍSTICAS
4.2 CONCEITOS GERAIS SOBRE ACESSIBILIDADE À WEB E SEUS BENEFÍCIOS
4.3 OS SETE COMPONENTES ESSENCIAIS PARA PROMOÇÃO DA ACESSIBILIDADE À WEB
4.4 ESTRATÉGIAS DE INTEGRAÇÃO DA ACESSIBILIDADE EM TODO O PROCESSO DE
DESENVOLVIMENTO DE WEBSITES, APLICATIVOS E OUTROS PRODUTOS DIGITAIS



---


DESENVOLVIMENTO RÁPIDO DE APLICAÇÕES EM PYTHON

RAD (Rapid Applications Development); Manipulação de dados em arquivos; Python com banco de
dados; Interface gráfica com python; Aplicando RAD.


Temas de aprendizagem
1.   RAD (RAPID APPLICATIONS DEVELOPMENT)
1.1 A CONTEXTUALIZAÇÃO, OS CONCEITOS, PRINCÍPIOS, AS FERRAMENTAS E TÉCNICAS
DA METODOLOGIA DE DESENVOLVIMENTO RÁPIDO DE SOFTWARE
1.2 AS FASES DA RAD
1.3 QUANDO APLICAR E QUANDO NÃO APLICAR RAD
1.4 O PYTHON E AS FERRAMENTAS (FRAMEWORK)
2.   MANIPULAÇÃO DE DADOS EM ARQUIVOS
2.1 MANIPULAÇÃO DE ARQUIVOS
2.2 MANIPULAÇÃO DE STRINGS
2.3 DESCREVER AS EXCEÇÕES NA MANIPULAÇÃO DE ARQUIVOS E OUTRAS OPERAÇÕES
3.   PYTHON COM BANCO DE DADOS
3.1 FRAMEWORKS E BIBLIOTECAS PARA GERENCIAMENTO DE BANCO DE DADOS
3.2 CONEXÃO, ACESSO E CRIAÇÃO DE BANCOS DE DADOS E TABELAS
3.3 INSERÇÃO, REMOÇÃO E ATUALIZAÇÃO DE REGISTROS EM TABELAS
3.4 RECUPERAÇÃO DE REGISTROS EM TABELAS
4.   INTERFACE GRÁFICA COM PYTHON
4.1 PRINCIPAIS FRAMEWORKS E BIBLIOTECAS NECESSÁRIAS PARA A GUI
4.2 ADIÇÃO DE WIDGETS E MONTAGEM DA INTERFACE GRÁFICA
4.3 INTERFACE PARA INCLUSÃO DE DADOS EM UMA TABELA NO BANCO DE DADOS
4.4 INTERFACE PARA LOCALIZAÇÃO, ALTERAÇÃO E EXCLUSÃO DE DADOS EM TABELA
5.   APLICANDO RAD
5.1 AS ETAPAS PARA TRATAMENTO DOS REQUISITOS DE UM SISTEMA NA METODOLOGIA
DE DESENVOLVIMENTO
5.2 AS MODELAGENS DE NEGÓCIOS E DE DADOS DA RAD
5.3 O DESIGN DE INTERFACE COM O USUÁRIO NA RAD
5.4 APLICAÇÃO RAD IMPLEMENTADA EM PYTHON



MATEMÁTICA E LÓGICA

TEORIA DOS CONJUNTOS E PRINCÍPIOS DE CONTAGEM; GRÁFICOS E INTERPRETAÇÕES
GRÁFICAS; APROFUNDAMENTO DE FUNÇÕES; CÁLCULO PROPOSICIONAL; CÁLCULO
DE PREDICADOS; MÉTODOS DE DEMONSTRAÇÃO

Temas de aprendizagem
1.   TEORIA DOS CONJUNTOS E PRINCÍPIOS DE CONTAGEM
1.1 LINGUAGEM DA TEORIA DOS CONJUNTOS
1.2 PRINCÍPIOS DE CONTAGEM
1.3 AGRUPAMENTOS COMBINATÓRIOS
2.   GRÁFICOS E INTERPRETAÇÕES GRÁFICAS
2.1 CONCEITOS DE INTERVALOS
2.2 CARACTERIZAÇÃO DO PLANO CARTESIANO
2.3 DEFINIÇÃO E CARACTERÍSTICAS DA FUNÇÃO
2.4 MÁXIMOS, MÍNIMOS E RAÍZES DE UMA FUNÇÃO
3.   APROFUNDAMENTO DE FUNÇÕES
3.1 DOMÍNIO, IMAGEM E O CONTRADOMÍNIO DE FUNÇÕES
3.2 TIPOS DE FUNÇÕES: INJETORA, SOBREJETORA E BIJETORA
3.3 FUNÇÕES CRESCENTES E DECRESCENTES
3.4 FUNÇÕES PERIÓDICAS
4.   CÁLCULO PROPOSICIONAL
4.1 PROPOSIÇÕES SIMPLES E COMPOSTAS
4.2 TABELA­VERDADE DE PROPOSIÇÕES COMPOSTAS
4.3 VALOR LÓGICO DAS PROPOSIÇÕES
4.4 SIGNIFICADO DE IMPLICAÇÃO LÓGICA
5.   CÁLCULO DE PREDICADOS
5.1 CONJUNTO UNIVERSO E O CONJUNTO VERDADE
5.2 QUANTIFICADORES UNIVERSAL E EXISTENCIAL
5.3 VARIÁVEIS LIVRES E LIGADAS E A NEGAÇÃO DE PROPOSIÇÕES COM
QUANTIFICADORES
5.4 APLICAÇÕES DO CÁLCULO DE PREDICADOS NA COMPUTAÇÃO
6.   MÉTODOS DE DEMONSTRAÇÃO
6.1 DEMONSTRAÇÕES POR VACUIDADE, TRIVIAL, DIRETA E INDIRETA
6.2 DEMONSTRAÇÕES POR CONTRADIÇÃO E POR REDUÇÃO AO ABSURDO
6.3 TÉCNICAS ENVOLVENDO QUANTIFICADORES
6.4 PRINCÍPIO DA INDUÇÃO



ENGENHARIA DE SOFTWARE

FUNDAMENTOS DE SOFTWARE E GERENCIAMENTO DE PROJETOS. FASES DO
DESENVOLVIMENTO DE SOFTWARE. MODELOS DE PROCESSO DE DESENVOLVIMENTO
DE SOFTWARE. QUALIDADE DE SOFTWARE. GERENCIAMENTO DE CONFIGURAÇÕES.

Temas de aprendizagem
1.   FUNDAMENTOS DE SOFTWARE E GERENCIAMENTO DE PROJETOS
1.1 CONCEITOS BÁSICOS RELACIONADOS COM O DESENVOLVIMENTO DE SOFTWARE
1.2 ETAPAS ESSENCIAIS DE UM PROCESSO DE DESENVOLVIMENTO DE SOFTWARE
1.3 RELAÇÃO ENTRE PROCESSO DE DESENVOLVIMENTO DE SOFTWARE E
GERENCIAMENTO DE PROJETO
1.4 GERENCIAMENTO DE RISCO NO PROJETO DE SOFTWARE
2.   FASES DO DESENVOLVIMENTO DE SOFTWARE
2.1 ENGENHARIA DE REQUISITOS E ANÁLISE DE SISTEMA
2.2 PROJETO DO SISTEMA
2.3 IMPLEMENTAÇÃO E TESTES
2.4 MANUTENÇÃO
3.   MODELOS DE PROCESSOS DE DESENVOLVIMENTO DE SOFTWARE
3.1 MODELOS DE PROCESSOS PRESCRITIVOS
3.2 O PROCESSO UNIFICADO
3.3 DESENVOLVIMENTO ÁGIL ­ EXTREME PROGRAMMING (XP)
3.4 DESENVOLVIMENTO ÁGIL ­ SCRUM E PROCESSO UNIFICADO ÁGIL
4.   QUALIDADE DE SOFTWARE
4.1 QUALIDADE DE PROCESSO E DE PRODUTO DE SOFTWARE
4.2 PROCESSO DA GARANTIA DE QUALIDADE DE SOFTWARE
4.3 PLANEJAMENTO DA QUALIDADE E O CONTROLE DA QUALIDADE DE SOFTWARE
4.4 MEDIÇÕES E MÉTRICAS DO SOFTWARE
5.   GERENCIAMENTO DE CONFIGURAÇÕES
5.1 FUNDAMENTOS DE GERENCIAMENTO DE CONFIGURAÇÕES
5.2 GERENCIAMENTO DE MUDANÇAS, VERSÕES E RELEASES
5.3 CONSTRUÇÃO DE SISTEMAS
5.4 FERRAMENTAS CASE PARA GERENCIAMENTO DE CONFIGURAÇÕES



BANCO DE DADOS

SISTEMA DE BANCO DE DADOS. PROJETO DE BANCO DE DADOS: MODELAGEM
CONCEITUAL. PROJETO DE BANCO DE DADOS: MODELAGEM LÓGICA E FÍSICA.
CRIAÇÃO E MANIPULAÇÃO DE OBJETOS NO POSTGRESQL. CONSULTAS EM UMA
TABELA NO POSTGRESQL. CONSULTA COM VÁRIAS TABELAS NO POSTGRESQL.

Temas de aprendizagem
1.   SISTEMA DE BANCO DE DADOS
1.1 HISTÓRICO DOS BANCOS DE DADOS
1.2 SISTEMAS DE BANCO DE DADOS (SBD)
1.3 SISTEMAS DE GERÊNCIA DE BANCO DE DADOS (SGBD)
2.   PROJETO DE BANCO DE DADOS: MODELAGEM CONCEITUAL
2.1 ETAPAS DO PROJETO
2.2 DIAGRAMA DE ENTIDADE E RELACIONAMENTO
2.3 MODELAGEM DE ENTIDADES E RELACIONAMENTOS
2.4 MODELAGEM DE ATRIBUTOS
3.   PROJETO DE BANCO DE DADOS: MODELAGEM LÓGICA E FÍSICA
3.1 MODELO RELACIONAL
3.2 FORMAS NORMAIS
3.3 MAPEAMENTO CONCEITUAL­LÓGICO
3.4 MODELO NO SGBD
4.   CRIAÇÃO E MANIPULAÇÃO DE OBJETOS NO POSTGRESQL
4.1 POSTGRESQL
4.2 CRIAÇÃO E ALTERAÇÃO DE TABELAS
43MANIPULAÇÃODELINHASNASTABELAS
4.   CRIAÇÃO E MANIPULAÇÃO DE OBJETOS NO POSTGRESQL
4.1 POSTGRESQL
4.2 CRIAÇÃO E ALTERAÇÃO DE TABELAS
4.3 MANIPULAÇÃO DE LINHAS NAS TABELAS
4.4 CONTROLE DE TRANSAÇÃO
5.   CONSULTAS EM UMA TABELA NO POSTGRESQL
5.1 COMANDO SELECT
5.2 CLÁUSULA WHERE
5.3 AGRUPAMENTO DE DADOS
6.   CONSULTA COM VÁRIAS TABELAS NO POSTGRESQL
6.1 JUNÇÕES INTERIOR E EXTERIOR
6.2 SUBCONSULTAS ANINHADAS E CORRELATAS
6.3 OPERADORES DE CONJUNTO



SISTEMAS OPERACIONAIS

CONCEITOS BÁSICOS DE SO. PROCESSOS E GERÊNCIA DE PROCESSADOR. MEMÓRIA.
SISTEMA DE ARQUIVOS. AUTOMATIZANDO TAREFAS NO LINUX

Temas de aprendizagem
1.   CONCEITOS BÁSICOS DE SO
1.1 EVOLUÇÃO DOS SISTEMAS OPERACIONAIS
1.2 TIPOS DE SISTEMAS OPERACIONAIS
1.3 ESTRUTURA DO SISTEMA OPERACIONAL
1.4 LINUX BÁSICO
2.   PROCESSOS E GERÊNCIA DE PROCESSADOR
2.1 CONCEITOS DE PROCESSO
2.2 PROGRAMAS CONCORRENTES
2.3 COMUNICAÇÃO ENTRE PROCESSOS
2.4 ESCALONAMENTO
3.   MEMÓRIA
3.1 CONCEITOS E GESTÃO DE MEMÓRIA
3.2 POLÍTICAS DE ALOCAÇÃO DE MEMÓRIA
3.3 MEMÓRIA VIRTUAL
3.4 LINUX E MEMÓRIA
4.   SISTEMA DE ARQUIVOS
4.1 IMPLEMENTAÇÃO
4.2 CONCEITOS
4.3 FERRAMENTAS PARA ARQUIVOS DO LINUX
4.4 EDITORES DE ARQUIVOS LINUX
5.   AUTOMATIZANDO TAREFAS NO LINUX
5.1 FERRAMENTA CRON
5.2 SCRIPTS PARA AUTOMATIZAÇÃO DE TAREFAS
53VARIÁVEISDEAMBIENTEEESTRUTURADEDECISÃOEMSCRIPTS
5.   AUTOMATIZANDO TAREFAS NO LINUX
5.1 FERRAMENTA CRON
5.2 SCRIPTS PARA AUTOMATIZAÇÃO DE TAREFAS
5.3 VARIÁVEIS DE AMBIENTE E ESTRUTURA DE DECISÃO EM SCRIPTS
5.4 ESTRUTURA DE REPETIÇÃO EM SCRIPTS



---


DESENVOLVIMENTO DE SOFTWARE SEGURO


Princípios de Software Seguro
Questões de implementação para software seguro
Modelagem, implantação e verificação de software seguro
EMPREGO DEVSECOPS NO CICLO DE VIDA DO SOFTWARE

Temas de aprendizagem
1.   PRINCÍPIOS DE SOFTWARE SEGURO
1.1 PRINCÍPIOS DE SEGURANÇA E O SOFTWARE SEGURO: QUAL É A RELAÇÃO?
1.2 PRINCÍPIOS DE DESIGN SEGURO DE SOFTWARE
1.3 AVALIAÇÃO DA CADEIA DE SUPRIMENTOS
2.   QUESTÕES DE IMPLEMENTAÇÃO PARA SOFTWARE SEGURO
2.1 VALIDAÇÃO DE ENTRADA
2.2 PROCESSANDO DE DADOS COM SEGURANÇA
2.3 CHAMANDO OUTROS PROGRAMAS
2.4 ENVIANDO SAÍDA
3.   MODELAGEM, IMPLANTAÇÃO E VERIFICAÇÃO DE SOFTWARE SEGURO
3.1 VERIFICAÇÃO DE SEGURANÇA
3.2 MODELAGEM DE AMEAÇAS/MODELAGEM DE ATAQUES
3.3 IMPLANTAÇÃO
3.4 GARANTIA E MÉTODOS FORMAIS
4.   EMPREGO DEVSECOPS NO CICLO DE VIDA DO SOFTWARE
4.1 CONCEITOS BÁSICOS DE DEVSECOPS
4.2 IMPLEMENTANDO DEVSECOPS
4.3 INFRAESTRUTURA COMO CÓDIGO
4.4 AUTOMAÇÃO DE TESTES



ALGORITMOS E COMPLEXIDADE

ANÁLISE DE ALGORITMO. RECURSIVIDADE. ALGORITMOS DE ORDENAÇÃO
AVANÇADOS. ALGORITMOS EM ÁRVORES DE PESQUISA BINÁRIA E ÁRVORE AVL.
ALGORITMOS EM GRAFOS.

Temas de aprendizagem
1.   ANÁLISE DE ALGORITMO
1.1 ALGORITMOS: FUNÇÕES E PASSAGEM DE PARÂMETROS
1.2 ESTRUTURA DE DADOS: HOMOGÊNEAS, HETEROGÊNEAS E PONTEIRO
1.3 ANÁLISE DE ALGORITMOS: CONCEITOS, NOTAÇÃO O E FUNÇÃO O
1.4 PRÁTICA DE ANÁLISE DE ALGORITMOS
2.   RECURSIVIDADE
2.1 DEFINIÇÕES RECURSIVAS
2.2 COMO IMPLEMENTAR RECURSIVIDADE
2.3 DESENVOLVENDO ALGORITMOS COM RECURSIVIDADE
2.4 QUANDO NÃO USAR RECURSIVIDADE
3.   ALGORITMOS DE ORDENAÇÃO AVANÇADOS
3.1 ANÁLISE DOS ALGORITMOS DE ORDENAÇÃO ELEMENTARES
3.1 ORDENAÇÃO POR INTERCALAÇÃO (MERGESORT)
3.2 ORDENAÇÃO RÁPIDA (QUICKSORT)
34ORDENAÇÃOSHELLSORT
3.   ALGORITMOS DE ORDENAÇÃO AVANÇADOS
3.1 ANÁLISE DOS ALGORITMOS DE ORDENAÇÃO ELEMENTARES
3.1 ORDENAÇÃO POR INTERCALAÇÃO (MERGESORT)
3.2 ORDENAÇÃO RÁPIDA (QUICKSORT)
3.4 ORDENAÇÃO SHELLSORT
4.   ALGORITMOS EM ÁRVORES BINÁRIA E ÁRVORE AVL
4.1 ARVORE BINÁRIA DE BUSCA: BUSCA, INSERÇÃO E REMOÇÃO COM ANÁLISE DE
COMPLEXIDADE
4.2 PERCURSO EM ÁRVORES BINÁRIA: ALGORITMOS DOS PERCURSOS EM ORDEM, PÓSORDEM E PRÉ­ORDEM COM RECURSIVIDADE E ANÁLISE DE COMPLEXIDADE
4.3 BALANCEAMENTO DE ÁRVORE: CONCEITOS E ALGORITMO DSW E ANÁLISE DE
COMPLEXIDADE
4.4 ÁRVORE AVL: CONCEITOS, PROPRIEDADES E ANÁLISE DE COMPLEXIDADE
5.   ALGORITMOS EM GRAFOS (ATIVIDADE PRÁTICA SUPERVISIONADA)
5.1 CONCEITOS DE GRAFOS
5.2 REPRESENTAÇÃO DE GRAFO
5.3 ALGORITMOS DE BUSCA
5.4 ALGORITMO DO CAMINHO MÍNIMO


PROGRAMAÇÃO ORIENTADA A OBJETOS EM JAVA

INTRODUÇÃO À PROGRAMAÇÃO OO EM JAVA; APROFUNDAMENTO DE HERANÇA E
POLIMORFISMO EM JAVA; IMPLEMENTAÇÃO DE TRATAMENTO DE EXCEÇÕES EM JAVA;
PROGRAMAÇÃO PARALELA EM JAVA: THREADS; INTEGRAÇÃO COM BANCO DE DADOS
EM JAVA

Temas de aprendizagem
1.   INTRODUÇÃO À PROGRAMAÇÃO OO EM JAVA
1.1 DEFINIÇÃO, MANIPULAÇÃO E NUANCES DE CLASSES E OBJETOS EM JAVA
1.2 O MECANISMO DE HERANÇA E POLIMORFISMO EM JAVA
1.3 OS MECANISMOS DE AGRUPAMENTO DE OBJETOS EM JAVA
1.4 AMBIENTE DE DESENVOLVIMENTO EM JAVA
2.   APROFUNDAMENTO DE HERANÇA E POLIMORFISMO EM JAVA
2.1 HIERARQUIA DE HERANÇA EM JAVA
2.2 OBJETOS EM JAVA
2.3 POLIMORFISMO EM JAVA
2.4 INTERFACES EM JAVA
3.   IMPLEMENTAÇÃO DE TRATAMENTO DE EXCEÇÕES EM JAVA
3.1 TIPOS DE EXCEÇÕES
3.2 CLASSE EXCEPTION
3.3 MECANISMO DE TRATAMENTO DE EXCEÇÕES
4.   PROGRAMAÇÃO PARALELA EM JAVA: THREADS
4.1 O CONCEITO DE THREADS E SUA IMPORTÂNCIA PARA O PROCESSAMENTO
PARALELO
4.2 SINCRONIZAÇÃO DE THREADS EM JAVA
4.3 IMPLEMENTAÇÃO DE THREADS EM JAVA
5.   INTEGRAÇÃO COM BANCO DE DADOS EM JAVA
5.1 OS RECURSOS PARA ACESSO A BANCO DE DADOS NO AMBIENTE JAVA
5.2 MODELO DE PERSISTÊNCIA BASEADO EM MAPEAMENTO OBJETO­RELACIONAL
5.3 TECNOLOGIA JAVA PARA A VIABILIZAÇÃO DA PERSISTÊNCIA EM BANCO DE DADOS

5.1 OS RECURSOS PARA ACESSO A BANCO DE DADOS NO AMBIENTE JAVA
5.2 MODELO DE PERSISTÊNCIA BASEADO EM MAPEAMENTO OBJETO­RELACIONAL
5.3 TECNOLOGIA JAVA PARA A VIABILIZAÇÃO DA PERSISTÊNCIA EM BANCO DE DADOS



APLIC. DE CLOUD, IOT E INDÚSTRIA 4.0 EM PYTHON

CONCEITOS DE INTERNET DAS COISAS. PLATAFORMAS DE MIDDLEWARE E
PROTOCOLOS DE COMUNICAÇÃO PARA IOT. DESENVOLVIMENTO DE APLICAÇÕES
USANDO PLATAFORMAS DE MIDDLEWARE PARA IOT EM PYTHON. PRINCÍPIOS E
TECNOLOGIAS DA INDÚSTRIA 4.0. INTEGRAÇÃO COM SISTEMAS DE CLOUD PARA IOT.


Temas de aprendizagem
1.   CONCEITOS DE INTERNET DAS COISAS
1.1 PRINCIPAIS ELEMENTOS DE UMA ARQUITETURA DE IOT E SUAS APLICAÇÕES
1.2 ESFORÇOS DE PADRONIZAÇÃO E OS PRINCIPAIS PROTOCOLOS USADOS PARA O
ESTABELECIMENTO DA CONECTIVIDADE EM UMA REDE DE IOT
1.3 PLATAFORMAS DE IOT DISPONÍVEIS NO MERCADO E SEUS PRINCIPAIS SERVIÇOS
2.   PLATAFORMAS DE MIDDLEWARE E PROTOCOLOS DE COMUNICAÇÃO PARA IOT
2.1 PLATAFORMAS DE MIDDLEWARE MAIS UTILIZADAS: XIVELY, WSO2, THINGSPEAK,
OPENIOT, THINGSBOARD
2.2 PROTOCOLOS DE REDE PARA IOT MQTT, COAP, XMPP­IOT, RESTFUL HTTP, DDS,
AMQP
3.   DESENVOLVIMENTO DE APLICAÇÕES USANDO PLATAFORMAS DE MIDDLEWARE
PARA IOT EM PYTHON
3.1 ETAPAS NECESSÁRIAS PARA INSTALAÇÃO, CONFIGURAÇÃO E DESENVOLVIMENTO
DE UMA APLICAÇÃO NA PLATAFORMA ARDUINO
3.2 ETAPAS NECESSÁRIAS PARA INSTALAÇÃO, CONFIGURAÇÃO E DESENVOLVIMENTO
DE UMA APLICAÇÃO NA PLATAFORMA NODEMCU
3.3 ETAPAS NECESSÁRIAS PARA INSTALAÇÃO, CONFIGURAÇÃO E DESENVOLVIMENTO
DE UMA APLICAÇÃO NA PLATAFORMA RASPBERRY PI
4.   PRINCÍPIOS E TECNOLOGIAS DA INDÚSTRIA 4.0
4.1 PRINCÍPIOS DA INDÚSTRIA 4.0 E SUAS CARACTERÍSTICAS MAIS IMPORTANTES
4.2 TECNOLOGIAS EMERGENTES PARA A INDÚSTRIA 4.0 NA MANIPULAÇÃO DE DADOS E
NA VISÃO DE MÁQUINA
4.3 PRINCIPAIS CARACTERÍSTICAS E A APLICAÇÃO DOS MÉTODOS DE INTELIGÊNCIA
ARTIFICIAL E SIMULAÇÃO NOS PROCESSOS DA INDÚSTRIA 4.0
4.4 FERRAMENTAS PARA CRIAÇÃO DE AMBIENTES DE SIMULAÇÃO, CONSIDERANDO OS
CUIDADOS NECESSÁRIOS PARA A SEGURANÇA DOS AMBIENTES VIRTUAIS

4.3 PRINCIPAIS CARACTERÍSTICAS E A APLICAÇÃO DOS MÉTODOS DE INTELIGÊNCIA
ARTIFICIAL E SIMULAÇÃO NOS PROCESSOS DA INDÚSTRIA 4.0
4.4 FERRAMENTAS PARA CRIAÇÃO DE AMBIENTES DE SIMULAÇÃO, CONSIDERANDO OS
CUIDADOS NECESSÁRIOS PARA A SEGURANÇA DOS AMBIENTES VIRTUAIS
5.   INTEGRAÇÃO COM SISTEMAS DE CLOUD PARA IOT
5.1 PRINCIPAIS CARACTERÍSTICAS DAS MAIS RELEVANTES PLATAFORMAS DE
COMPUTAÇÃO EM NUVEM PARA IOT
5.2 CONCEITOS DE BIG DATA A ANALYTICS APLICADOS NO CONTEXTO DE
COMPUTAÇÃO EM NUVEM



TÓPICOS DE BIG DATA EM PYTHON


Princípios de Big Data. Hadoop e Armazenamento de Dados. Princípios de Desenvolvimento com
PySpark. Análise de Dados em Python com Pandas. Big Data Analytics.


Temas de aprendizagem
1.   PRINCÍPIOS DE BIG DATA
1.1 INTRODUÇÃO E APLICAÇÕES AO BIG DATA
1.2 CONCEITOS DE IOT E COMPUTAÇÃO DISTRIBUÍDA
1.3 PLATAFORMAS EM NUVEM PARA APLICAÇÕES DE BIGDATA
1.4 PROCESSAMENTO E STREAMING DE DADOS
2.   HADOOP E ARMAZENAMENTO DE DADOS
2.1 INTRODUÇÃO E ARQUITETURA AO HADOOP
2.2 ECOSSISTEMA E SOLUÇÕES COM HADOOP
2.3 HDFS VS RDBMS
2.4 ENTENDO UM DATA LAKE
3.   PRINCIPIOS DE DESENVOLVIMENTO DE SPARK COM PYTHON
3.1 INTRODUÇÃO AO SPARK
3.2 UTILIZANDO PYSPARK
3.3 OPERAÇÕES DE MAPREDUCE COM PYSPARK
3.4 TRANSFORMAÇÕES COM PYSPARK
4.   ANÁLISE DE DADOS EM PYTHON COM PANDAS
4.1 COMPONENTES E SINTAXE DO PANDAS
4.2 PREPARAÇÃO DE DADOS COM PANDAS
4.3 MANIPULAÇÃO DE DADOS COM PANDAS
4.4 VISUALIZAÇÃO DE DADOS COM PANDAS
5.   BIG DATA ANALYTICS (ATIVIDADE PRÁTICA SUPERVISIONADA)
5.1 COMPREENDENDO À DESCOBERTA DO CONHECIMENTO ­ KDD
5.2 DESMISTIFICANDO INTELIGÊNCIA ARTIFICAL
5.3 APLICAÇÕES DE APRENDIZADO DE MÁQUINA COM TENSOR­FLOW
5.4 APLICAÇÕES DE APRENDIZADO PROFUNDO COM O SCIKIT­LEARN

5.2 DESMISTIFICANDO INTELIGÊNCIA ARTIFICAL
5.3 APLICAÇÕES DE APRENDIZADO DE MÁQUINA COM TENSOR­FLOW
5.4 APLICAÇÕES DE APRENDIZADO PROFUNDO COM O SCIKIT­LEARN



---


ANÁLISE DE DADOS

ANÁLISE DE DADOS QUANTITATIVOS. PROBABILIDADES. VARIÁVEIS ALEATÓRIAS
DISCRETAS UNIDIMENSIONAIS. VARIÁVEIS ALEATÓRIAS CONTÍNUAS
UNIDIMENSIONAIS. TESTES DE HIPÓTESE. MODELO BÁSICO DE REGRESSÃO LINEAR.

Temas de aprendizagem
1.   ANÁLISE DE DADOS QUANTITATIVOS
1.1 FERRAMENTAS DE ANÁLISE EXPLORATÓRIA DE DADOS
1.2 MEDIDAS DE POSIÇÃO OU TENDÊNCIA CENTRAL
1.3 MEDIDAS DE DISPERSÃO OU VARIABILIDADE
2.   PROBABILIDADES
2.1 CONCEITOS BÁSICOS DE PROBABILIDADE
2.2 CÁLCULOS PARA RESOLUÇÃO DE PROBLEMAS SIMPLES DE PROBABILIDADE
2.3 PRINCIPAIS REGRAS DA TEORIA DAS PROBABILIDADES
2.4 EVENTOS CONDICIONAIS COM BASE NA RESOLUÇÃO DE PROBLEMAS ASSOCIADOS
A ELES
3.   VARIÁVEIS ALEATÓRIAS DISCRETAS UNIDIMENSIONAIS
3.1 OS CONCEITOS DE VARIÁVEIS ALEATÓRIAS DISCRETAS UNIDIMENSIONAIS
3.2 AS DISTRIBUIÇÕES DE BERNOULLI E BINOMIAL
3.3 AS DISTRIBUIÇÕES GEOMÉTRICA E HIPERGEOMÉTRICA
3.4 A DISTRIBUIÇÃO DE POISSON
4.   VARIÁVEIS ALEATÓRIAS CONTÍNUAS UNIDIMENSIONAIS
4.1 OS CONCEITOS DE VARIÁVEIS ALEATÓRIAS CONTÍNUAS
4.2 A DISTRIBUIÇÃO UNIFORME
4.3 A DISTRIBUIÇÃO EXPONENCIAL
4.4 A DISTRIBUIÇÃO NORMAL
5.   TESTES DE HIPÓTESE
5.1 ASPECTOS CONCEITUAIS E APLICAÇÕES DE INTERVALOS DE CONFIANÇA
5.2 ASPECTOS CONCEITUAIS E APLICAÇÕES DE TESTES DE HIPÓTESE
6.   MODELO BÁSICO DE REGRESSÃO LINEAR
6.1 A ÁREA DE ECONOMETRIA E A ABORDAGEM EMPÍRICA PARA PROBLEMAS
SOCIOECONÔMICOS
6.2 CONCEITOS BÁSICOS DOS ESTIMADORES DE MÍNIMOS QUADRADOS ORDINÁRIOS

6.   MODELO BÁSICO DE REGRESSÃO LINEAR
6.1 A ÁREA DE ECONOMETRIA E A ABORDAGEM EMPÍRICA PARA PROBLEMAS
SOCIOECONÔMICOS
6.2 CONCEITOS BÁSICOS DOS ESTIMADORES DE MÍNIMOS QUADRADOS ORDINÁRIOS



PROGRAMAÇÃO PARA DISPOSITIVOS MÓVEIS EM ANDROID


SINTAXE E COMPONENTES DO REACTIVE NATIVE. INTERFACE GRÁFICA COM REACTIVE
NATIVE. PERSISTÊNCIA DE DADOS COM REACTIVE NATIVE. CONEXÃO REMOTA COM
REACTIVE NATIVE. TÓPICOS AVANÇADOS EM REACTIVE NATIVE.


Temas de aprendizagem
1.   SINTAXE E COMPONENTES DO REACT NATIVE
1.1 AMBIENTE DE DESENVOLVIMENTO COM ALGUMAS DE SUAS POSSÍVEIS
CONFIGURAÇÕES
1.2 OS COMPONENTES NATIVOS DO REACT NATIVE
1.3 A DEPURAÇÃO DE APLICATIVOS
2.   INTERFACE GRÁFICA COM REACT NATIVE
2.1 INTERFACE INTERATIVA DE UM APLICATIVO MOBILE
2.2 COMPONENTES DE LISTA E MULTIVALORADOS
2.3 PRINCIPAIS MODELOS DE NAVEGAÇÃO
2.4 RECURSOS DE ESTILIZAÇÃO E ANIMAÇÃO
3PERSISTÊNCIADEDADOSCOMREACTNATIVE
2.2 COMPONENTES DE LISTA E MULTIVALORADOS
2.3 PRINCIPAIS MODELOS DE NAVEGAÇÃO
2.4 RECURSOS DE ESTILIZAÇÃO E ANIMAÇÃO
3.   PERSISTÊNCIA DE DADOS COM REACT NATIVE
3.1 ASYNCSTORAGE
3.2 PERSISTÊNCIA NO MODELO RELACIONAL
3.3 REALM
3.4 PERSISTÊNCIA NO MODELO NOSQL
4.   CONEXÃO REMOTA COM REACT NATIVE
4.1 COMPONENTES PARA CONEXÃO EM REDE
4.2 PERSISTÊNCIA REMOTA COM CONTROLE DE ACESSO NA ARQUITETURA REST
4.3 MODELO OFFLINE FIRST
5.   TÓPICOS AVANÇADOS EM REACT NATIVE
5.1 ARQUITETURA MVC COM REACT NATIVE
5.2 ARQUITETURAS FLUX E REDUX COM REACT NATIVE
5.3 CRIPTOGRAFIA COM REACT NATIVE
5.4 PUBLICAÇÃO DE APLICATIVOS COM REACT NATIVE



SISTEMAS DE INFORMAÇÃO E SOCIEDADE


SISTEMAS DE INFORMAÇÃO
O POVO BRASILEIRO E A QUESTÃO DOS NEGROS E ÍNDIOS
MEIO AMBIENTE E SOCIEDADE
FUNDAMENTAÇÃO HISTÓRICA DOS DIREITOS HUMANOS


Temas de aprendizagem
1.   SISTEMAS DE INFORMAÇÃO
1.1 CONCEITOS BÁSICOS
1.2 SISTEMAS DE INFORMAÇÃO E COMPETITIVIDADE
1.3 INFRAESTRUTURA PARA SISTEMAS DE INFORMAÇÃO
1.4 PRINCIPAIS TIPOS DE SISTEMAS DE INFORMAÇÃO
2.   O POVO BRASILEIRO E A QUESTÃO DOS NEGROS E ÍNDIOS
21INFLUÊNCIASSOCIAISDEBRANCOSNEGROSEÍNDIOSNAFORMAÇÃODA
1.3 INFRAESTRUTURA PARA SISTEMAS DE INFORMAÇÃO
1.4 PRINCIPAIS TIPOS DE SISTEMAS DE INFORMAÇÃO
2.   O POVO BRASILEIRO E A QUESTÃO DOS NEGROS E ÍNDIOS
2.1 INFLUÊNCIAS SOCIAIS DE BRANCOS, NEGROS E ÍNDIOS NA FORMAÇÃO DA
SOCIEDADE BRASILEIRA
2.2 PARTICIPAÇÃO DO ÍNDIO NA CONSTRUÇÃO E DESENVOLVIMENTO DA SOCIEDADE
BRASILEIRA
2.3 PARTICIPAÇÃO DO NEGRO NA CONSTRUÇÃO E DESENVOLVIMENTO DA SOCIEDADE
BRASILEIRA
2.4 CRITICAMENTE AS RELAÇÕES ÉTNICO­RACIAIS NO BRASIL
3.   MEIO AMBIENTE E SOCIEDADE
3.1 AS CONSEQUÊNCIAS DA PERDA DA BIODIVERSIDADE
3.2 AS FORMAS DE PREVENÇÃO E CONSEQUÊNCIAS DOS IMPACTOS AMBIENTAIS
3.3 SUSTENTABILIDADE, AGENDA 21 E AÇÕES NO BRASIL
4.   FUNDAMENTAÇÃO HISTÓRICA DOS DIREITOS HUMANOS
4.1 AS CARACTERÍSTICAS E A EVOLUÇÃO DOS DIREITOS HUMANOS
4.2 OS ARGUMENTOS TEÓRICOS E AS CRÍTICAS DOS DIREITOS HUMANOS
4.3 A DIVERSIDADE DAS CULTURAS AOS DIREITOS HUMANOS
4.4 ESTRUTURAÇÃO DOS DIREITOS HUMANOS NO BRASIL




INTELIGÊNCIA ARTIFICIAL PARA DEVS


FUNDAMENTOS DE INTELIGÊNCIA ARTIFICIAL; SISTEMAS DE APRENDIZADO DE
MÁQUINA; REDES NEURAIS ARTIFICIAIS (RNA); DEEP LEARNING; VISÃO
COMPUTACIONAL E RECONHECIMENTO DE IMAGEM; PROCESSAMENTO DE
LINGUAGEM NATURAL E RECONHECIMENTO DE VOZ


Temas de aprendizagem
1.   FUNDAMENTOS DE INTELIGÊNCIA ARTIFICIAL
1.1 FUNDAMENTOS DE INTELIGÊNCIA ARTIFICIAL
1.2 PARADIGMAS DA INTELIGÊNCIA ARTIFICIAL
1.3 APLICAÇÕES DA INTELIGÊNCIA ARTIFICIAL
2.   SISTEMAS DE APRENDIZADO DE MÁQUINA
2.1 CONCEITOS DE APRENDIZADO DE MÁQUINA
2.2 MÉTODOS DE APRENDIZADO DE MÁQUINA DE ACORDO COM O SINAL
2.3 CATEGORIAS DE PROBLEMAS DE APRENDIZADO DE MÁQUINA EM FUNÇÃO DA
SAÍDA
3.   REDES NEURAIS ARTIFICIAIS (RNA)
3.1 CONCEITOS E CARACTERÍSTICAS DE UMA REDE NEURAL ARTIFICIAL
3.2 ARQUITETURAS DE REDES NEURAIS ARTIFICIAIS
3.3 REDE PERCEPTRON E PERCEPTRON MULTICAMADAS
3.4 REDES NEURAIS ARTIFICIAIS NA PRÁTICA
4.   DEEP LEARNING
4.1 CONCEITO DE DEEP LEARNING
4.2 PRINCIPAIS TIPOS DE REDES DEEP LEARNING
43FRAMEWORKSDEDEEPLEARNING
4.   DEEP LEARNING
4.1 CONCEITO DE DEEP LEARNING
4.2 PRINCIPAIS TIPOS DE REDES DEEP LEARNING
4.3 FRAMEWORKS DE DEEP LEARNING
4.4 DEEP LEARNING NA PRÁTICA
5.   VISÃO COMPUTACIONAL E RECONHECIMENTO DE IMAGEM
5.1 CONCEITOS DE VISÃO COMPUTACIONAL E RECONHECIMENTO DE IMAGENS
5.2 FRAMEWORKS PARA VISÃO COMPUTACIONAL
5.3 DETECÇÃO E RECONHECIMENTO DE IMAGEM
5.4 APLICAÇÕES DE VISÃO COMPUTACIONAL E RECONHECIMENTO DE IMAGENS
6.   PROCESSAMENTO DE LINGUAGEM NATURAL E RECONHECIMENTO DE VOZ
6.1 CONCEITOS E TÉCNICAS DE PLN
6.2 TÉCNICAS DE RECONHECIMENTO DE VOZ
6.3 APLICAÇÕES DE PLN



PADRÕES DE PROJETOS DE SOFTWARE COM JAVA


PADRÕES GoF DE CRIAÇÃO. PADRÕES GoF ESTRUTURAIS. PADRÕES GoF
COMPORTAMENTAIS. PADRÕES GRASP. TECNOLOGIAS JPA E JEE.


 Temas de aprendizagem
1.   PADRÕES GOF DE CRIAÇÃO
1.1 ABSTRACT FACTORY
1.2 BUILDER
1.3 FACTORY METHOD
1.4 PROTOTYPE E SINGLETON
2.   PADRÕES GOF ESTRUTURAIS
2.1 ADAPTER
2.2 BRIDGE E DECORATOR
2.3 COMPOSITE E FACADE
2.4 FLYWEIGHT E PROXY
3.   PADRÕES GOF COMPORTAMENTAIS
3.1 CHAIN OF RESPONSIBILITY, COMMAND E ITERATOR
3.2 MEDIATOR, MEMENTO E STRATEGY
3.3 OBSERVER, VISITOR E STATE
3.4 INTERPRETER E TEMPLATE METHOD
4.   PADRÕES GRASP
4.1 ESPECIALISTA NA INFORMAÇÃO E CRIADOR
4.2 ACOPLAMENTO FRACO, COESÃO ALTA E CONTROLADOR
4.3 INDIREÇÃO E VARIAÇÕES PROTEGIDAS
5.   TECNOLOGIAS JPA E JEE (ATIVIDADE PRÁTICA SUPERVISIONADA)
5.1 CARACTERÍSTICAS DO JPA (JAVA PERSISTENCE API)
5.2 COMPONENTES EJB (ENTERPRISE JAVA BEANS) NA CONSTRUÇÃO DE REGRAS DE
NEGÓCIO
5.3 UTILIZAÇÃO DA ARQUITETURA MVC NA PLATAFORMA JAVA
54IMPLEMENTAÇÃODEPADRÃOFRONTCONTROLCOMSERVLET
5.1 CARACTERÍSTICAS DO JPA (JAVA PERSISTENCE API)
5.2 COMPONENTES EJB (ENTERPRISE JAVA BEANS) NA CONSTRUÇÃO DE REGRAS DE
NEGÓCIO
5.3 UTILIZAÇÃO DA ARQUITETURA MVC NA PLATAFORMA JAVA
5.4 IMPLEMENTAÇÃO DE PADRÃO FRONT CONTROL COM SERVLET

